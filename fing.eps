%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (skywalker) ()
%%Title: (magnifier_fingerprint.eps)
%%CreationDate: 5/21/2016 10:13 PM
%%BoundingBox: 0 0 600 600
%%HiResBoundingBox: 0 0 600 600
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 300.5 299.5 300.5 299.5
%AI3_TileBox: 2.3999 -120.8701 597.4199 720.9902
%AI3_DocumentPreview: Header
%AI5_ArtSize: 600 600
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -183 767 1 1029 939 18 1 0 1366 85 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:0 0
%AI7_GridSettings: 56.6929 10 56.6929 10 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 13355 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD4BFFA8A87DA87DA8
%7DFD04A8FD70FF7D7D5252FD0427F827F827F8FD042752527DA8FD67FFA8
%7D522727F8272727F827F827F827F827F8272727F8FD04277DA8FD62FF7D
%522727F827F827F827275252FD077D52522727F827F827F827277DA8FD5C
%FFA87DFD0427F827277D7DA8FD0EFFA8A87D52FD0427F82752A8FD59FF52
%27F827F827277DA8FD16FFA87D522727F827F8527DFD55FFA8FD0527527D
%FD1DFF7D52F827272752FD52FFA852F827F82752A8FD20FFA87D2727F827
%277DFD4FFF7DFD042752A8FD25FF7DFD042752A8FD4CFF52FD0427A8FD28
%FFA852F827F8277DFD4AFFFD042752FD2CFFA8FD04277DFD47FFA82727F8
%277DFD1EFF52F85252A8FD0BFFA82727F82752FD45FFA8FD0427A8FD1FFF
%FD0527527DFD0BFF5227272752FD43FFA82727F852A8FD20FFA82727F827
%F827277DA8FD09FF5227F82752FD42FF27272752A8FD23FFA87D2727F827
%27527DFD09FF7D2727277DFD40FF2727F852A8FD27FF7D52F827F82752FD
%09FF5227F8277DFD3EFF52272752A8FD2AFFA852FD0427A8FD08FF522727
%27A8FD3CFF52272727A8FD2DFF7D27F827F87DFD08FF52272727A8FD3AFF
%A82727277DFD09FFA8A87D7DA8FFA852527D7DA8A8FD19FFA852F827277D
%FD08FF27272752FD39FFA827F82752FD07FF7D522727F8F8F8A8FFA8FD05
%F827F852527DA8FD16FF52F827F87DFD07FFA8F827F87DFD38FF7D272727
%FD05FF7D522727F82727527DA8FFFFFFA87DA87D7D52522727F82752A8A8
%FD14FF7D2727F87DFD07FFA8272727FD37FFA8F82727A8FFFFA87D2727F8
%27527DA8FD0DFFA8A87D522727F82752FD14FF7DF827F87DFD07FF52F827
%52FD36FF5227F87DFFFF5227F827277DA8FD05FFA8A8FD057DA87DFD07FF
%7D522727277DA8FD12FF7D272727A8FD06FFA8272727A8FD34FF7D27F827
%A87D27F8F8527DFFFFFFA8A852522727FD07F827F827277D7DFD04FFA852
%27F82752FD12FF52F82727FD07FF5227F852FD34FF5227277DA8F82752A8
%FFFFFFA85252F8FD04277D52FD057D52522727F82752FD05FFA87D272727
%A8FD11FF52272752FD07FF272727A8FD32FFA8F82727FF7D527DFFFFFF7D
%52F8F8F85252A8A8FD0BFF7D7D277DFFFF7D7DA8FFFFA827F8F87DFD10FF
%A827F8277DFD06FF7DF82752FD32FF5227F8A8FD05FFA82727F85252A8FD
%06FFA8A87DA8A8FD0AFF27F8527DFFFFFF7D27F852FD10FF7D272752FD06
%FFA8272727A8FD30FFA827F827A8FFFFFF7D52F8F8277DA8FFFFFFA87D27
%27F827F827F87DFFFF525252A8FD04FF7D52F82727A8FFFF7D27F852FD10
%FF2727F87DFD06FF5227F87DFD30FF7D272752FFFFFF5227F8527DFFFFFF
%A87D2727F8272752527D527DA8FFA827F827275252A8FFFFFFA82727F87D
%FFFFA8527DFD10FFA8272727FD07FF272727FD30FF272727A8FFA827F8F8
%7DFFFFFFA85227F827277D7DFD09FFA87D5252F8F8F8527DFFFFFF5227F8
%52A8FD14FF52F8277DFD06FF52F8277DFD2EFFA8272752FF7DF82752A8FF
%FFA852F827277DA8FD07FFA8FFA8FD06FFA85227F82752A8FFFFA852F827
%A8FFFFFF7D52A8FD0DFF7D27F852FD06FF7D27277DFD2EFF7DF8277DA8F8
%2752FFFFFF5227F8277DFD04FFA87D522727F827F8272752527DA8FFFFFF
%A87D27F8F87DA8FFA852F8277DFFFF52F827A8FD0DFF2727F8A8FD05FFA8
%F82727FD2EFF522727A8A8277DFFFFA82727277DFD04FF7D522727F82727
%522752FD0427F827277DA8FFFFFF7D27F852A8FFFF7DF8277DFFFF52F852
%FD0DFF7DF8277DFD06FF522727A8FD2CFFA852F827A8FD04FF7DF8F827A8
%FFFFA85227F8F85252A8A8FD05FFA8A87D7D2727F82752A8FFFFA852F827
%7DFFFF7DF8277DFFA827F87DFD0CFFA827F852FD06FF5227F8A8FD2CFFA8
%272752FFFFFFA852F8277DFFFFFF5227F82752A8FD0EFFA8522727277DFF
%FFFF52F8277DFFFF7DF827A8FFA827F8A8FD0CFF272727FD06FFA8F8277D
%FD2CFF7D27F87DFFFFA827F8277DFFFF7D27F8F852A8FFFFFFA87D5252FD
%05277D7DA8FFFFFFA85227F827A8FFFF7DF8277DFFFF52F852FFFF52F827
%FD0CFF7D2752FD06FFA827F852FD2CFF7DF8277DFFA827F852A8FFFF7DF8
%2752A8FFFFFF7D2727F8FD0727F82727527DFFFFFFA852F8277DFFFF7DF8
%277DFFFF52F87DFFFF27277DFD15FF272727FD2CFF5227F8A8A827F852FF
%FFFF52F8277DFFFFFF5227F827277D7DA8A8FFFFA87D7D5227F827277DA8
%FFFF52F8277DFFFF7DF827A8FFA827F8A8FFA8F827A8FD14FF52F827A8FD
%2BFF7D2727A852F87DFD04FF2752A8FFFFA82727F8527DFD0CFFA85227F8
%52A8FFFF7DF8277DFFFF7DF852FFFF7D2727FFFF52F87DFD14FF522727FD
%2CFF272727FF527DFD06FFA8FFA852F82727A8FFFFFFA87D522752275252
%7DA8FFFFFF7D52F82752FFFF7DF8277DFFA852F87DFFFF27F87DFFA82727
%FD14FF7DF8277DFD2BFF522752FD04FF7D52A8FFFFFFA852F8277DFFFFFF
%7D522727F8FD0527F82752A8FFFFFF7DF82752FFFFA82727A8FFA82727FF
%FFA8F852FFFF52277DFD13FF7D2727A8FD2BFF272727FFFFFF7D27F8A8FF
%FF7D27F852A8FFFFA82727F82752FD05A87D522727F8527DFFFFA8F82752
%FFFF7DF827A8FF52F852FFFF52F8A8FFA8F852FD13FF7DF8277DFD2BFF52
%F852FFFFA827F87DFFFF7D27F87DFFFFA852F82727A8FD0AFF7D52F82752
%FFFFA827277DFFFF52F87DFFFF2727A8FF7D2727FFFF52F8A8FD12FF7D27
%27A8FD2BFF272727FFA827F852FFFF7D27F87DFFFF7D27F8277DFFFFFFA8
%7D5252527D7DFFFFFFA87DF8F827FFFF7DF8277DFF7D2727A8FF7DF852FF
%FF2727A8FF52F852FD12FF7DF8277DFD2BFF522752FF52F852FFFF7D2727
%7DFFFF7D27F852A8FFFFA85227F8272727F8272752A8FFFFA8272752FFFF
%7DF852FFFF522752FFA82727FFFF7DF87DFFA8F852FD12FF522727A8FD2B
%FF272727FF2727A8FF7D27F87DFFFF5227F87DFFFFA852F82727527DA87D
%7D5227F82752FFFFA8272752FFFF52F87DFFA8F827A8FF52F87DFF7D2727
%FFA827F8FD12FF7DF827A8FD2BFF522727A8FFFFFFA827F87DFFFF7D27F8
%A8FFFFA827F8277DFD07FFA87D272727FFFFA82727A8FF7D2727FFFF52F8
%7DFFA8F852FFFF2727A8FF52277DFD11FF522727A8FD2BFF522727A8FFFF
%A827F852FFFF5227F8A8FFFFFFA82752A8FFFFA85252527DA8FFFFA827F8
%27FFFF7DF852FFFF27277DFF7D2752FFA82727FFFF52F8A8FF7DF87DFD11
%FF52F827A8FD2BFF7D27277DFFFF52F852FFFF7D2727A8FD08FFA8522727
%F827F82752FFFFFF272752FFFF52F8A8FFA8F852FFFF2727A8FF5227A8FF
%7D277DFF7D2752FD11FF272727FD2CFF7D27F87DFF7DF827A8FF7D27F87D
%FFFF5252A8FFFFFF7D27F82752A87D7D27F827A8FFA8F827A8FF7D2752FF
%A82727FFFF52F8A8FF7DF87DFFA8F852FFA8F852FD10FFA827F852FD2CFF
%A8272752FF2727A8FFA827F87DFFFF522727FFFFFF5227277DFD06FF5227
%27FFFF7DF87DFFFF2727FFFF2727A8FF52277DFF7D277DFFA82752FFA827
%27FD10FFA8272752FD2CFFA827F852A85252FFFF52F852FFFF5227F8A8FF
%FF52F8F8A8FFFF7D52527DFFFF27F852FFA82727FFFF52F8A8FF7DF8A8FF
%7DF87DFF7DF852FFA8F827FFFF2752FD10FF5227F87DFD2DFF522727A8FF
%FFFF7DF852FFFF7D2727A8FFFF522727A8FFFF5227F827F87DFFFF2727FF
%FF2727A8FF52277DFD05FF7D2752FFA82752FFFF5227FD14FF522727A8FD
%2DFF7DF8277DFFFFA8F827A8FFA827F87DFFFF522727A8FFFF27F8277D7D
%27F8A8FF52F8A8FF52F8A8FF7DF87DFD05FFA8F852FFA8F852FFFF2727A8
%FD13FF272727FD2EFFA827F852FFFF52277DFFA852F87DFFFF522727A8FF
%FF272727A8FFFF7DF87DFF5227A8FF52277DFF7DF87DFFA87DA8FFA82752
%FFA82752FFFF2727FFFFA87DFD0FFF7D272752FD2DFFA8FF272727FF7DF8
%27FFFF52F852FFFF522727A8FFFF27F827FD05FF7DFFA82727FFFF52F8A8
%FF7DF87DFF7DF87DFFA8F852FFA8F852FFFF2727A8FF2727A8FD0EFF52F8
%277DFD2CFFA852FF7DF8277DA8F8A8FFA8F827A8FF7D2727A8FFFF522727
%FFFFFF2752FFFFFF7DF852FFFF2727A8FF5227A8FF52277DFF7D2752FFFF
%A8A8FFA82727FFFF2727FD0FFF272727FD2DFF2727FFA827F852A8A8FFFF
%27F852FFA827F8A8FFFF272727A8FFFF27F827FFFFA8F827A8FF7D2752FF
%A82727FFFF52F8A8FF7DF87DFD05FFA8F852FFFF2727A8FD0DFF7D27F852
%FD2CFFA8F8A8FFFF2727F8A8FFFFA82727FFFF52F87DFFFF522727FFFFFF
%272752FFFFFF27277DFFFF27F8A8FF7DF852FFFF2727FFFF2727A8FFA8A8
%FFFF7D2752FFA82752FD0EFF5227277DFD2CFF2752A852A87DF82752FFFF
%7DF87DFFA8F827A8FF522727A8FFFF27F827FFFFA8272752FFFF52F852FF
%FF27277DFF7DF852FFA82727FFFF27F8FFFF7DF87DFF7DF852FD0DFFA8F8
%2727FD2CFFA827A8A8F8FFFF272727A8FF5227A8FF52277DFFA82727A8FF
%FF7DF827FFFFFF272752FFFF7DF827A8FF7D2727FFFF52F8A8FFA8F87DFF
%FF2752FFFF5227A8FF52277DFD0DFF5227277DFD2CFF7D27FF2752FFFF52
%27F852FF27F8FFFF52F8A8FF7DF852FD04FF7DFFFFFF27F827FFFFFF52F8
%7DFFA827F8A8FFA8F827FFFF27F87DFF7DF852FFA82727FFFF52F8A8FD0C
%FF7D27F827A8FD2CFF527DA827A8A87DFF272727A8527DFFFF2727A8FF52
%27A8FF2752FFFFFFA8272727FD04FFA87DFFFF52F87DFFFF27277DFF7D27
%27FFFF52F8A8FFA8F852FFFF2727A8FD0CFF5227277DFD2CFFA8277D7DF8
%FF2752FF7DF82727FFFFFFA82727FFFF52F8A8FF27F87DA87DF8F827FFFF
%FFA8FD04FF7DF827A8FF52F827FFFF52F87DFFA8F827FFFF27277DFF7D27
%52FD0CFF7DF82727FD2DFFA827A85252FF277DFFFF5227277DFFFFFF2727
%A8FF52277DFF7D27F827F82752FFFFA82752FFFFFF7DF827A8FFA827F8A8
%FFA8F852FFFF52277DFFA82727FFFF52F8A8FD0BFFA8272727A8FD2DFF7D
%27A85252A827FD04A827F827A8FFFF52F87DFFA8F827A8FF7D52277DA8FF
%FFA827F852FFFF7DF8277DFFA852F87DFFFF27F87DFFA82727FFFF7DF852
%FFA8F827A8FD0BFF2727F852FD2EFFA827FF277DA827A85252FF52272752
%FFFF7D2752FFFF52F852A8FD06FF7DF82752FFFFA827277DFFFF52F852FF
%FF522752FFFF52F87DFFFF2727A8FF7D2752FD0BFF52272727A8FD31FF27
%7DA8F8FF2752FFFF2727F852FFFF27277DFFA827F8277DFFFFFF7D52F827
%7DFFFF7DF82752FFFF7DF827A8FF7D27F8A8FF7DF827A8FF52F852FFA827
%F8A8FD0AFF7D27F8277DFD30FFA8FF277DA827A85252FFFFFF2727277DFF
%A8F852FFFFA852F82727522727F852A8FFFF7DF8277DFFFF7DF827A8FFA8
%27F87DFFFF27277DFFA82727A8FF7DF852FD0AFFA82727277DFD30FF7D27
%A85252A8F8A87D27FFA8A8A8F827F87DFF7D52FD04FF7DFD05277DFFFFA8
%52F8277DFFFF7DF8277DFFA852F852FFFF52F827FFFF52F852FFFF27277D
%FD09FFA827272752FD31FFA827A85252FF277DA827FF5252FF7DF827277D
%FD04FFA8FFFFFFA8FFA8FFFFFF7D52F8277DFFFFFF52277DFFFF52F852FF
%FF7D2727FFFFA8F827A8FF7D2752FD09FFA8FD0427FD32FFA8277DA852FF
%2752A8277DA8F8FFFF7DF827F87DFFFF7DF8277DA8FFFFFFA87D2727F852
%A8FD04FFA87DFFFF52F827A8FFA827F87DFFFF27277DFFA827F8A8FD08FF
%A827F8FD0427FD32FF277DFFFFFF7D27FF5252FF2752FFFF7D2727F87DFF
%FF2727F82727522727F827277DFFFFA87DA8FD04FF7DF827A8FFFF52F87D
%FFFF522752FFFF52F87DFD08FF7DFD0827FD31FF7D27FF7D7DA8277DA8F8
%A87D277DFFFF7DF827F852FFFF7D522727F82727527DFFFFFF7D27F87DFF
%FFFF52F8277DFFFF52F852FFFF7D2727FFFF7DF827A8FD07FF7D27F8FD08
%27FFFFA87DA87DFD2AFFA827A87DF8FF5252FF7DA8FF5227A8FFFF7D2727
%F852A8FFFFFFA8A8A8FD05FF5227F852A8FFFF52F8277DFFFF52F852A8FF
%A827F8A8FFFF27277DFD07FF5227272752FF52FD0627522727F827277DA8
%FD28FF2752A8277DFFF87DFFFFA8FF27277DFFFFA82727F82752FD07FF7D
%52F8F8277DFFFFA852F8277DFFFF52F827A8FFA827F87DFFFF27F852FD06
%FFA82727F82752FFFFFFFD0627F827F827F827F827A8FD27FFA827FF7D27
%FF7DF8FFFF277DFF522752FFFFFFFD0527A8FFFFFF7D2727F82752FFFFFF
%7D27F852A8FFFF52F827A8FFFF52F852FFFF7D2727FD05FFA87DFD04277D
%FD05FFFD0627527D7D7DFD0427A8FD26FFA82752FF2752FF2727FF7DF852
%FF7D27F8527DFF5227F827F852A8FF7D27277DA8FFFFA85227F852A8FFA8
%52F827A8FFA852F852A8FF7D27F8A8FD04FF5227F827F852A8FD07FFFD04
%277DFD04FFA82727F8277DFD26FF7D27A8A8F8A8FF2727FFA82727FFFFA8
%2752FFFFA8522727F82752A8A8FD04FFA8272727A8FFFFA852F827A8FFFF
%52F852A8FFFF52F87DFFFFA87DFD05277DFD09FF5227277DFD07FFFD0427
%A8FD26FF2727FF7DF8A8A82727FFA852F8527DFFA8FD04FF7D2727F827F8
%527DA8FFFF7D2752FFFFFFA827F852A8FFFF7DF827A8FFFFFFA87DA8A852
%27F827F82752A8FD09FFA8F82727FD09FF2727F8277DFD26FF2752FF7DF8
%A8FF52F87DFFA852272752FD047DA8FF7D52FD0527527DA8A8FD04FFA827
%7DFD04FF7D52FD04FFA8A85252FD05277DA8FD0BFF7D27F87DFD0AFF5227
%27277DFD25FFA8F87DFF52F87DFF7DF8277DFFA87D5252272727A8FFFFFF
%7D2727F827F8272752527D7DFD04A8FFFFFFA8A87DA852522727F8272727
%F82752A8FD0DFFA8F8277DFFFF7DA8FD07FF5227272752FD25FFA8A8FFFF
%7DF852FFFF5227277DA8FD05FFA8A8527DFFFFA87DFD0D2752FD0627F827
%2727F82752A8A8FD0FFF7D27277DFFFF2727A8FD07FF522727277DFD26FF
%5252A8A827A8FFFFA87DFD0527FFA827F8277DFFA8A8A8FFA87D5227F827
%F827F827F827F827F827F827F827275252A8A8FD13FF272727A8FF7DF827
%A8FD07FF5227272752FD25FFA82727A8FFFFA8277DA8FFFFA87DA8FFFFA8
%FFFFFF522727FFFFFFA8FFFFFFA87D527D525227FD04527D7DA8A8FD18FF
%7D272727FFFF7DF852A8FD07FF7D2727277DFD26FF272752A8FF7D272727
%527DA87DA87D7D5227F8277DFFA852F87DFD2AFFA827F82727FFFF7DF852
%A8FD07FF5227F82752FD26FF7D27F852A8FFA87D5252FD0527527DFFFFFF
%5227277DFD2CFFA827272752FFFF7DF852FD08FF7D2727277DFD26FFA87D
%2727277DA8FFA8FFA8A8A8FFA8A87D52F8277DFD2FFF7D27F82752FFFF52
%F852FD08FF5227F82752FD28FFA87D2727F87DFF7D5252FD042752A8FD32
%FF7D27272752FFFF52F852FD08FF7D2727277DFD2AFFA87DA8FF7D52527D
%7DA8A8FD35FF7D27F82752FFFF52F852FD08FF5227272752FD6AFF7D2727
%277DFFFF52F852FD08FF522727277DFD6AFF5227F82752FFA852F852FD08
%FF522727277DFD6AFF7D2727277DFFFF52F852FD08FF52272752FD6BFF52
%2727277DFFFF52F852FD08FF5227F8A8FD6BFF522727277DFFFF52F852FD
%07FF7DF8277DFD6CFF5227F8277DFFFF52F852FD05FFA8F827F8A8FD6DFF
%522727277DFFFF52F87DFFFFFFA827272752FD6FFF5227F82752FFFF5252
%FFFFA82727F852FD71FF522727277DFD04FFA827272752FD73FF5227F827
%52FFFFA8F827F852FD75FF7D272727527D2727F852FD77FF52272727F827
%F852FD79FF7D272727F852FD7BFFA8A87DA8FDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFD29FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS3) (FILTERiT4 Live Trail ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS3) (FILTERiT4 Live Tiling ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS3) (FILTERiT4 Live Shadow ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS3) (FILTERiT4 Live Reflections ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS3) (FILTERiT4 Live Neon ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS3) (FILTERiT4 Live Generation ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS3) (FILTERiT4 Live Galaxy ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS3) (FILTERiT4 Live Frame ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS3) (FILTERiT4 Live Explosion ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS3) (FILTERiT4 Live Emboss ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS3) (FILTERiT4 Live Cutout ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS3) (FILTERiT4 Live Circle ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS3) (FILTERiT4 Live Border ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
(Black)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(bg) Ln
0 A
1 Ap
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
600 0 m
0 0 L
0 600 L
600 600 L
600 0 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(magnifier) Ln
0 A
u
0 Ap
0 O
0.694118 0.631373 0.619608 0.584314 0.2 0.2 0.2 Xa
0 J 0 j 1 w 4 M []0 d0 XR
136.3765 252.5986 m
138.4365 267.3691 151.1265 280.0244 162.3228 291.1904 C
164.1934 293.0586 l
175.4155 304.2822 187.4116 314.4033 199.0737 312.5391 c
207.2563 311.2295 214.4097 306.6963 218.6963 300.1074 c
221.5884 295.6504 222.3584 290.6836 220.9844 285.3457 c
219.1147 278.0713 209.9756 268.4814 202.6313 260.7764 c
201.5684 259.6602 200.5264 258.5684 199.5264 257.5049 c
192.0107 249.5117 181.9058 243.2148 178.3066 244.2842 c
176.6064 244.791 173.6426 246.1465 172.8896 249.5391 c
172.3516 251.9648 169.9497 253.4922 167.5225 252.958 c
165.0967 252.4199 163.5654 250.0166 164.1035 247.5898 c
165.3613 241.9141 169.7104 237.4531 175.7314 235.6602 c
187.5703 232.1191 204.2236 249.3613 206.0835 251.3389 c
207.0703 252.3887 208.0977 253.4668 209.1465 254.5674 c
217.6304 263.4688 227.2466 273.5586 229.7017 283.1035 c
231.6987 290.8691 230.5044 298.4434 226.2446 305.0107 c
220.5693 313.7324 211.1846 319.7158 200.4976 321.4258 c
184.8486 323.9355 170.7383 312.335 157.8286 299.4209 C
155.9663 297.5625 l
143.7676 285.3965 129.9395 271.6064 127.4624 253.8408 c
125.6987 241.1738 129.1226 228.8594 137.3633 218.2256 c
138.2505 217.0811 139.5796 216.4824 140.9233 216.4824 c
141.8867 216.4824 142.8564 216.79 143.6777 217.4258 c
145.6416 218.9482 145.9995 221.7744 144.4775 223.7393 c
137.7563 232.4111 134.9556 242.3906 136.3765 252.5986 c
f
183.1211 256.834 m
200.3989 274.0918 l
202.1582 275.8477 202.1602 278.6973 200.4033 280.4551 c
198.647 282.2139 195.7969 282.2158 194.0391 280.459 C
176.7612 263.2012 l
175.002 261.4453 175 258.5957 176.7573 256.8379 c
177.6362 255.958 178.7881 255.5176 179.9409 255.5176 c
181.0923 255.5176 182.2432 255.9561 183.1211 256.834 c
f
176.6494 215.624 m
178.1143 215.3828 179.5625 215.2686 180.9976 215.2686 c
195.4033 215.2695 208.2764 226.8184 219.3535 237.8779 c
221.1113 239.6338 221.1133 242.4834 219.3574 244.2422 c
217.6006 246.001 214.7515 246.0039 212.9937 244.2471 c
202.3945 233.6641 190.0825 222.5391 178.1084 224.5049 c
170.0264 225.832 162.8735 230.4658 158.4834 237.2148 c
155.5732 241.6982 154.7915 246.6611 156.1582 251.9648 c
158.1084 259.5156 167.9072 269.251 175.7813 277.0723 C
177.9805 279.2617 l
189.4292 290.7158 194.8472 295.5928 198.7104 294.1582 c
201.5044 293.126 203.6436 290.6787 204.2915 287.7705 c
204.8315 285.3447 207.2383 283.8174 209.6626 284.3574 c
212.0874 284.8984 213.6162 287.3027 213.0752 289.7275 c
211.7705 295.5889 207.4614 300.5205 201.8315 302.5996 c
192.1606 306.1777 183.9854 298.001 171.6152 285.625 C
169.4385 283.457 l
160.3335 274.4121 150.0122 264.1592 147.4434 254.2129 c
145.4492 246.4775 146.6563 238.9053 150.9375 232.3105 c
156.7056 223.4424 166.0776 217.3604 176.6494 215.624 c
f
226.5371 258.4766 m
224.9189 256.5908 225.1362 253.75 227.021 252.1309 c
227.8701 251.4023 228.9121 251.0459 229.9502 251.0459 c
231.2173 251.0459 232.4771 251.5781 233.3672 252.6152 c
242.8149 263.625 247.8682 273.4443 249.2661 283.5186 c
251.0352 296.2939 247.6802 308.9248 239.8179 319.0869 c
230.5361 331.0732 216.0752 338.8701 200.1431 340.4766 c
187.5469 341.749 173.9351 337.1221 159.689 326.7285 c
157.6821 325.2646 157.2422 322.4492 158.7061 320.4414 c
160.1709 318.4346 162.9849 317.9932 164.9941 319.459 c
177.3931 328.5049 188.9111 332.5645 199.2402 331.5215 c
212.728 330.1631 224.9243 323.6221 232.7012 313.5781 c
239.1611 305.2285 241.8062 295.2607 240.3521 284.7549 c
239.2012 276.4678 234.811 268.1182 226.5371 258.4766 c
f
268.7695 283.6865 m
270.4697 301.6279 265.0513 319.1406 253.5127 332.999 c
240.5435 348.5557 221.0435 358.3828 200.0117 359.9609 c
170.2114 362.1904 143.5146 340.2666 130.2505 326.999 c
113.8174 310.5713 102.5664 295.4443 95.8555 280.752 c
94.8223 278.4912 95.8184 275.8213 98.0796 274.7891 c
100.3394 273.7549 103.0093 274.751 104.0415 277.0117 c
110.2993 290.71 120.9536 304.9785 136.6147 320.6348 c
146.4165 330.4395 172.1543 353.0127 199.3374 350.9863 c
217.9556 349.5889 235.1816 340.9326 246.5977 327.2383 c
256.5894 315.2373 261.2817 300.0713 259.8096 284.5361 c
257.8647 264.04 242.0215 245.7002 226.7827 230.4648 c
208.5913 212.3027 192.1616 203.8438 177.9365 205.3477 c
171.0737 206.0576 164.2646 208.2754 158.2466 211.7617 c
156.0947 213.0107 153.3423 212.2744 152.0967 210.123 c
150.8516 207.9736 151.5845 205.2197 153.7354 203.9746 c
160.8447 199.8564 168.8936 197.2354 177.0024 196.3955 c
178.3794 196.251 179.7676 196.1787 181.1675 196.1787 c
197.1064 196.1787 214.5674 205.5518 233.1436 224.0977 c
249.5176 240.4678 266.5547 260.3496 268.7695 283.6865 c
f
122.8188 334.4248 m
146.8188 358.4248 175.4487 371.8867 199.397 370.4658 c
223.1626 369.04 245.4126 358.2852 260.4438 340.957 c
269.811 330.1709 276.0107 317.1533 278.374 303.3115 c
278.7476 301.1172 280.6519 299.5684 282.8037 299.5684 c
283.0557 299.5684 283.311 299.5889 283.5669 299.6318 c
286.0166 300.0498 287.6636 302.375 287.2456 304.8252 c
284.605 320.293 277.687 334.8271 267.2407 346.8574 c
250.6348 366 226.103 377.8799 199.9351 379.4502 c
161.7769 381.7236 128.8389 353.1738 116.4546 340.7891 c
105.1519 329.4873 95.6909 318.0049 88.335 306.6631 c
86.9819 304.5781 87.5757 301.792 89.6606 300.4395 c
91.7466 299.0869 94.5327 299.6807 95.8848 301.7666 c
102.8989 312.5801 111.9609 323.5684 122.8188 334.4248 c
f
279.2886 284.4209 m
277.7705 263.3633 265.1055 241.2041 240.5688 216.6777 c
238.8105 214.9209 238.8105 212.0713 240.5674 210.3135 c
241.4468 209.4346 242.5986 208.9951 243.7495 208.9951 c
244.9019 208.9951 246.0527 209.4346 246.9316 210.3125 c
273.0645 236.4346 286.5845 260.4639 288.2661 283.7744 c
288.4438 286.2529 286.5796 288.4072 284.1006 288.5859 c
281.6147 288.7617 279.4668 286.8994 279.2886 284.4209 c
f
150.3984 313.208 m
148.6416 314.9668 145.7915 314.9658 144.0342 313.208 c
126.6436 295.8145 110.2393 276.5938 107.9863 253.9189 c
107.7402 251.4453 109.5464 249.2412 112.0195 248.9961 c
112.1704 248.9805 112.3203 248.9736 112.4692 248.9736 c
114.7544 248.9736 116.7114 250.707 116.9424 253.0283 c
118.9165 272.8916 134.1885 290.6318 150.3984 306.8447 c
152.1563 308.6025 152.1563 311.4512 150.3984 313.208 c
f
232.3477 202.999 m
230.8257 204.9609 227.9966 205.3174 226.0337 203.7959 c
214.4634 194.8174 203.1875 189.0332 192.5205 186.6025 c
190.0977 186.0498 188.5806 183.6387 189.1328 181.2148 c
189.6084 179.1279 191.4624 177.7139 193.5166 177.7139 c
193.8477 177.7139 194.1836 177.751 194.5195 177.8271 c
206.4766 180.5518 218.9355 186.8955 231.5518 196.6846 c
233.5146 198.209 233.8706 201.0352 232.3477 202.999 c
f
307.7598 283.8213 m
309.4023 312.166 299.8979 339.4658 280.9946 360.6934 c
260.7217 383.4521 231.1558 397.3916 199.8789 398.9375 c
173.5918 400.2344 144.5127 389.3223 117.9878 368.1855 c
116.0439 366.6367 115.7227 363.8057 117.272 361.8623 c
118.8218 359.918 121.6528 359.5967 123.5957 361.1465 c
148.4067 380.917 175.3467 391.1475 199.4326 389.9473 c
228.3179 388.5205 255.5957 375.6748 274.2739 354.707 c
291.5767 335.2764 300.2788 310.2861 298.7759 284.3428 c
296.8853 251.8311 273.5796 222.1006 254.3608 202.8857 c
243.5718 192.0986 231.5366 183.0645 219.5547 176.7578 c
217.356 175.5996 216.5117 172.8789 217.6699 170.6797 c
218.4746 169.1484 220.0376 168.2744 221.6558 168.2744 c
222.3618 168.2744 223.0786 168.4414 223.7476 168.793 c
236.519 175.5156 249.3047 185.1035 260.7236 196.5205 c
281.0488 216.8408 305.707 248.4824 307.7598 283.8213 c
f
322.084 279.6123 m
322.1602 279.6084 322.2344 279.6064 322.3105 279.6064 c
324.6924 279.6064 326.6826 281.4775 326.8008 283.8828 c
328.4727 317.6924 317.0928 349.8799 294.7583 374.5186 c
275.2119 396.0723 249.48 410.4482 220.3418 416.0928 c
217.9019 416.5635 215.541 414.9707 215.0679 412.5303 c
214.5962 410.0908 216.1899 407.7295 218.6299 407.2568 c
245.8433 401.9863 269.8618 388.5742 288.0903 368.4727 c
308.8096 345.6172 319.3652 315.7344 317.8125 284.3291 c
317.6885 281.8467 319.6025 279.7344 322.084 279.6123 c
f
88.6416 357.2109 m
89.8208 357.2109 90.9976 357.6709 91.8804 358.5869 c
92.9927 359.7393 94.1084 360.8818 95.2295 362.0039 c
126.4487 393.2178 165.3955 410.9922 199.4507 409.5322 c
201.9395 409.4365 204.0317 411.3525 204.1387 413.8359 c
204.2446 416.3193 202.3164 418.418 199.8335 418.5234 c
163.3315 420.0693 121.8354 401.334 88.8657 368.3682 c
87.7046 367.208 86.5527 366.0264 85.4038 364.835 c
83.6777 363.0459 83.7285 360.1982 85.5176 358.4717 c
86.3916 357.6299 87.5166 357.2109 88.6416 357.2109 c
f
91.6299 328.667 m
96.9087 335.2158 102.79 341.7734 109.1089 348.1611 c
110.8569 349.9287 110.8408 352.7773 109.0747 354.5254 c
107.3071 356.2734 104.459 356.2578 102.7109 354.4912 c
96.1777 347.8887 90.0928 341.1006 84.623 334.3164 c
83.064 332.3818 83.3667 329.5488 85.3018 327.9883 c
86.1338 327.3184 87.1318 326.9922 88.124 326.9922 c
89.438 326.9922 90.7407 327.5645 91.6299 328.667 c
f
320.4004 268.71 m
317.9883 269.3057 315.5479 267.835 314.9521 265.4219 c
308.6992 240.1299 292.0767 213.0195 268.1455 189.0859 c
261.8984 182.8398 255.1665 177.0449 248.1362 171.8613 c
246.1362 170.3857 245.7104 167.5684 247.1855 165.5684 c
248.0674 164.3721 249.4302 163.7393 250.8105 163.7393 c
251.7383 163.7393 252.6733 164.0244 253.4785 164.6172 c
260.8687 170.0674 267.9434 176.1582 274.5083 182.7217 c
299.5835 207.7979 317.0479 236.4014 323.6875 263.2617 c
324.2852 265.6748 322.8125 268.1143 320.4004 268.71 c
f
361.625 288.5771 m
359.1582 288.6709 357.0537 286.7305 356.9609 284.2471 c
355.6846 249.8516 339.3584 212.1963 310.9941 178.2178 c
309.4014 176.3096 309.6563 173.4727 311.5645 171.8799 c
312.4063 171.1768 313.4297 170.834 314.4463 170.834 c
315.7334 170.834 317.0137 171.3838 317.9023 172.4502 c
347.5391 207.9502 364.6045 247.5352 365.9551 283.9131 c
366.0469 286.3965 364.1084 288.4844 361.625 288.5771 c
f
199.4736 448.9385 m
236.9688 447.6641 273.2534 433.6455 301.6445 409.4668 c
302.4922 408.7451 303.5283 408.3926 304.5605 408.3926 c
305.832 408.3926 307.0977 408.9297 307.9883 409.9746 c
309.5996 411.8672 309.3711 414.707 307.4805 416.3184 c
277.5464 441.8105 239.2988 456.5889 199.7798 457.9326 c
197.2866 458 195.2134 456.0723 195.1284 453.5879 c
195.0444 451.1045 196.9897 449.0225 199.4736 448.9385 c
f
356.4941 303.6748 m
356.6924 301.3281 358.6602 299.5566 360.9727 299.5566 c
361.0996 299.5566 361.2285 299.5625 361.3584 299.5723 c
363.834 299.7832 365.6719 301.9619 365.4609 304.4385 c
362.3242 341.2979 347.3984 375.0801 322.2969 402.1338 c
320.6055 403.9551 317.7598 404.0605 315.9365 402.3711 c
314.1152 400.6807 314.0088 397.833 315.6992 396.0117 c
339.4229 370.4453 353.5293 338.5156 356.4941 303.6748 c
f
108.9009 422.8408 m
109.6841 422.8408 110.478 423.0459 111.1997 423.4766 c
133.8389 436.9639 157.6929 445.4824 180.1831 448.1074 c
182.6519 448.3955 184.4199 450.6299 184.1309 453.0986 c
183.8428 455.5664 181.6079 457.333 179.1401 457.0459 c
155.3999 454.2754 130.314 445.3398 106.5928 431.207 c
104.458 429.9355 103.7588 427.1729 105.0308 425.0381 c
105.873 423.625 107.3667 422.8408 108.9009 422.8408 c
f
308.5293 388.3242 m
294.604 403.4844 277.9863 415.5117 259.1362 424.0752 c
256.8701 425.1025 254.2065 424.1016 253.1782 421.8389 c
252.1504 419.5762 253.1514 416.9082 255.4141 415.8809 c
273.1572 407.8213 288.7983 396.501 301.9004 382.2363 c
326.541 355.4092 339.2734 320.6143 337.7559 284.2607 c
336.2773 248.9971 315.9355 209.2891 281.9463 175.3184 c
280.8242 174.1963 279.6763 173.085 278.5151 171.9805 c
276.7144 170.2676 276.6431 167.4189 278.3564 165.6182 c
279.2402 164.6885 280.4272 164.2197 281.6172 164.2197 c
282.7314 164.2197 283.8472 164.6309 284.7173 165.459 c
285.9341 166.6162 287.1362 167.7803 288.3091 168.9541 c
309.2109 189.8438 344.5957 232.5527 346.748 283.8848 c
348.3672 322.6377 334.7939 359.7295 308.5293 388.3242 c
f
95.0293 389.4736 m
96.0161 389.4736 97.0103 389.7969 97.8413 390.4629 c
129.9351 416.1953 166.9873 430.2617 199.4775 429.0449 c
212.2725 428.5674 224.9863 426.4355 237.2651 422.71 c
239.6445 421.9873 242.1563 423.3311 242.8784 425.709 c
243.6001 428.0869 242.2573 430.5996 239.8794 431.3213 c
226.8613 435.2725 213.3804 437.5322 199.8135 438.0391 c
165.1772 439.3125 125.9683 424.5488 92.2114 397.4844 c
90.2725 395.9297 89.9614 393.0977 91.5151 391.1582 c
92.4043 390.0498 93.7114 389.4736 95.0293 389.4736 c
f
97.7388 192.9502 m
98.2607 192.9502 98.791 193.0859 99.272 193.373 c
100.6958 194.2217 101.1606 196.0635 100.313 197.4863 c
94.1929 207.7529 91.3208 219.4668 92.0068 231.3623 c
92.0518 232.1309 92.1216 232.8975 92.2046 233.6602 c
92.3848 235.3076 91.1938 236.7881 89.5469 236.9668 c
87.9048 237.1387 86.4199 235.9561 86.2397 234.3086 c
86.147 233.4443 86.0669 232.5781 86.0166 231.708 c
85.2607 218.6104 88.4219 205.7148 95.1587 194.4141 c
95.7197 193.4727 96.7168 192.9502 97.7388 192.9502 c
f
111.3145 192.543 m
119.4604 183.1699 130.2334 176.6406 142.4663 173.6582 c
142.7056 173.6006 142.9443 173.5723 143.1792 173.5723 c
144.5303 173.5723 145.7573 174.4922 146.0913 175.8633 c
146.4844 177.4727 145.4976 179.0957 143.8872 179.4883 c
132.8672 182.1738 123.1694 188.0488 115.8442 196.4766 c
110.8003 202.292 107.2925 208.8945 105.4194 216.0996 c
105.0024 217.7031 103.3672 218.668 101.7612 218.248 c
100.1572 217.8311 99.1953 216.1934 99.6123 214.5898 c
101.7202 206.4824 105.6563 199.0654 111.3145 192.543 c
f
162.6748 151.1689 m
162.9038 149.6865 164.1807 148.627 165.6357 148.627 c
165.7876 148.627 165.9429 148.6377 166.0977 148.6621 c
170.9507 149.4121 175.9717 150.7148 181.02 152.5352 c
182.5786 153.0977 183.3867 154.8164 182.8247 156.375 c
182.2617 157.9346 180.542 158.7422 178.9849 158.1797 c
174.2988 156.4902 169.6548 155.2832 165.1816 154.5918 c
163.5449 154.3389 162.4219 152.8066 162.6748 151.1689 c
f
94.2808 175.4316 m
109.2397 158.9258 130.7017 148.8936 153.1636 147.9063 c
153.209 147.9043 153.2539 147.9033 153.2988 147.9033 c
154.894 147.9033 156.2217 149.1611 156.293 150.7715 c
156.3657 152.4268 155.083 153.8281 153.4277 153.9004 c
132.5547 154.8184 112.6167 164.1348 98.7271 179.4609 c
85.7446 193.7861 79.0278 212.2705 79.813 231.5088 c
80.0376 237.0303 81.1699 242.7666 83.1768 248.5576 c
83.7178 250.124 82.8887 251.832 81.3228 252.375 c
79.7568 252.916 78.0488 252.0879 77.5068 250.5225 c
75.3086 244.1768 74.0679 237.8613 73.8179 231.7529 c
72.9678 210.9326 80.2358 190.9307 94.2808 175.4316 c
f
107.2759 187.9736 m
106.1738 189.2119 104.2769 189.3223 103.041 188.2188 c
101.8027 187.1172 101.6929 185.2207 102.7959 183.9834 c
115.5659 169.6436 133.9121 160.8506 153.1299 159.8594 c
153.998 159.8145 154.875 159.792 155.7588 159.792 c
158.5459 159.792 161.4077 160.0137 164.2988 160.4541 c
165.938 160.7041 167.063 162.2354 166.813 163.873 c
166.564 165.5098 165.0269 166.6367 163.395 166.3867 c
159.9858 165.8672 156.6387 165.6885 153.439 165.8516 c
135.813 166.7607 118.9868 174.8232 107.2759 187.9736 c
f
52.9019 228.5332 m
52.9399 228.5322 52.9771 228.5313 53.0137 228.5313 c
54.6196 228.5313 55.9507 229.8027 56.0098 231.4209 c
56.5557 246.2695 61.48 261.6943 70.644 277.2676 c
71.4839 278.6953 71.0078 280.5342 69.5796 281.375 c
68.1519 282.2158 66.313 281.7393 65.4727 280.3105 c
55.7979 263.8701 50.5967 247.4961 50.0137 231.6416 c
49.9536 229.9854 51.2456 228.5938 52.9019 228.5332 c
f
214.3076 145.9014 m
213.4326 147.3066 211.5815 147.7402 210.1758 146.8633 c
196.9678 138.6436 176.3945 129.0156 153.4048 129.7949 c
151.7568 129.835 150.3608 128.5557 150.3037 126.8994 c
150.2466 125.2432 151.5435 123.8555 153.1997 123.7988 c
154.1548 123.7656 155.1016 123.75 156.0488 123.75 c
179.3784 123.75 199.9736 133.4473 213.3457 141.7695 c
214.7524 142.6445 215.1826 144.4951 214.3076 145.9014 c
f
153.4102 141.8389 m
141.395 142.2998 129.7759 145.0703 118.875 150.0732 c
117.3691 150.7646 115.5879 150.1035 114.897 148.5977 c
114.2061 147.0918 114.8672 145.3115 116.3721 144.6201 c
127.9922 139.2881 140.375 136.335 153.1812 135.8428 c
154.0669 135.8096 154.9551 135.793 155.8511 135.793 c
169.0649 135.793 183.29 139.4531 197.1733 146.4482 c
198.6533 147.1934 199.248 148.9971 198.502 150.4766 c
197.7573 151.9561 195.9521 152.5547 194.4731 151.8057 c
180.5542 144.793 166.354 141.3398 153.4102 141.8389 c
f
141.4458 130.9033 m
122.5278 133.7607 104.8521 141.7969 90.3306 154.1445 c
89.0688 155.2197 87.1758 155.0654 86.1021 153.8027 c
85.0288 152.541 85.1816 150.6475 86.4448 149.5742 c
101.8169 136.502 120.5259 127.9941 140.5498 124.9697 c
140.7007 124.9473 140.8521 124.9365 141.002 124.9365 c
142.46 124.9365 143.7388 126.002 143.9639 127.4883 c
144.2119 129.127 143.084 130.6553 141.4458 130.9033 c
f
56.3105 219.4365 m
56.1675 221.0869 54.7095 222.293 53.0625 222.166 c
51.4126 222.0234 50.1895 220.5693 50.3325 218.9189 c
52.3066 196.1484 61.6147 175.2051 77.2524 158.3525 c
77.8438 157.7158 78.6465 157.3936 79.4526 157.3936 c
80.1826 157.3936 80.9146 157.6582 81.4927 158.1943 c
82.7065 159.3213 82.7773 161.2197 81.6504 162.4346 c
66.9307 178.2979 58.1675 198.0098 56.3105 219.4365 c
f
90.1851 170.9443 m
82.541 179.2666 76.7129 188.6943 72.8633 198.9639 c
72.2822 200.5156 70.5542 201.2988 69 200.7207 c
67.4492 200.1387 66.6631 198.4092 67.2451 196.8584 c
71.3672 185.8633 77.5981 175.7783 85.7661 166.8857 c
91.4541 160.6934 97.9819 155.2539 105.168 150.7158 c
105.666 150.4033 106.2202 150.2539 106.7671 150.2539 c
107.7632 150.2539 108.7363 150.749 109.3071 151.6523 c
110.1909 153.0537 109.772 154.9063 108.3721 155.791 c
101.6333 160.0439 95.5142 165.1426 90.1851 170.9443 c
f
61.6694 231.6738 m
61.3604 224.1299 62.0234 216.5449 63.6396 209.1289 c
63.9453 207.7246 65.1885 206.7666 66.5674 206.7666 c
66.7793 206.7666 66.9946 206.7891 67.2104 206.8359 c
68.8286 207.1895 69.8555 208.7881 69.5024 210.4063 c
67.9946 217.3232 67.3765 224.3955 67.6646 231.4277 c
68.0796 241.5371 70.9575 252.1074 76.2192 262.8467 c
76.9482 264.335 76.3335 266.1318 74.8452 266.8613 c
73.3574 267.5908 71.5605 266.9736 70.8315 265.4863 c
65.2012 253.9961 62.1182 242.6191 61.6694 231.6738 c
f
407.2363 217.5254 m
391.6807 201.9668 L
417.5146 176.1387 L
433.0703 191.6973 l
407.2363 217.5254 L
f
*u
1 D
402.9609 483.0244 m
365.7031 520.2822 316.1621 540.8018 263.4614 540.8037 c
210.7778 540.8037 161.2446 520.2832 123.9878 483.0234 c
86.7305 445.7627 66.2124 396.2256 66.2124 343.5361 c
66.2148 290.8467 86.7334 241.3125 123.9917 204.0576 c
161.2485 166.8027 210.7856 146.2861 263.4766 146.2881 c
316.1738 146.2881 365.7129 166.8027 402.9668 204.0537 c
440.2207 241.3047 460.7383 290.8408 460.7383 343.5361 c
460.7412 396.2275 440.2227 445.7646 402.9609 483.0244 c
f
0 D
263.4766 159.2881 m
214.2578 159.2871 167.9858 178.4512 133.1836 213.25 c
98.3804 248.0498 79.2134 294.3193 79.2124 343.5361 c
79.2124 392.7529 98.3784 439.0264 133.1807 473.8311 c
167.9814 508.6357 214.2505 527.8037 263.4678 527.8037 c
312.6895 527.8018 358.9648 508.6348 393.7695 473.8311 c
428.5742 439.0283 447.7412 392.7549 447.7383 343.5361 c
447.7383 241.9414 365.0791 159.2881 263.4766 159.2881 c
f
*U
*u
1 D
543.5605 116.6436 m
513.7227 147.7334 502.0859 158.8818 469.0332 189.4688 c
462.8125 195.2158 454.6104 198.3818 445.9414 198.3818 c
436.5234 198.3818 427.6885 194.7402 421.0449 188.1152 c
407.9922 175.0166 407.3975 153.5039 419.7236 140.1533 c
450.3633 107.0508 461.5215 95.4033 492.5654 65.5967 c
496.7979 61.5303 502.3271 59.1973 507.7402 59.1963 c
512.3857 59.1963 516.6475 60.9063 519.7344 64.0029 C
545.1465 89.4238 l
552.1699 96.4277 551.4756 108.3818 543.5605 116.6436 c
f
0 D
535.96 98.6221 m
510.5352 73.1885 l
509.7188 72.3691 508.5645 72.1963 507.7402 72.1963 c
505.6865 72.1973 503.3809 73.2334 501.5713 74.9717 c
470.7734 104.541 459.6953 116.1055 429.2695 148.9775 c
421.6123 157.2705 422.0547 170.7109 430.2402 178.9248 c
434.4141 183.0889 439.9902 185.3818 445.9414 185.3818 c
451.332 185.3818 456.3994 183.4424 460.207 179.9238 c
493.0293 149.5488 504.584 138.4814 534.1777 107.6445 c
537.2959 104.3896 537.623 100.2813 535.96 98.6221 c
f
*U
442.1074 160.8711 m
440.6074 162.4912 438.0771 162.5908 436.4551 161.0898 c
434.834 159.5889 434.7344 157.0576 436.2363 155.4375 c
465.9043 123.3848 476.9854 111.8359 504.0898 85.7305 c
504.8662 84.9824 505.8662 84.6113 506.8652 84.6113 c
507.9141 84.6113 508.9609 85.0215 509.7461 85.8369 c
511.2783 87.4277 511.2305 89.96 509.6387 91.4922 c
482.6797 117.458 471.6504 128.9531 442.1074 160.8711 c
f
412.3906 383.4102 m
398.291 436.3447 356.5771 478.1133 303.5234 492.4141 c
300.0552 493.3516 296.4907 491.2949 295.5571 487.8301 c
294.6216 484.3643 296.6743 480.7959 300.1411 479.8623 c
348.7227 466.7656 386.9199 428.5254 399.8271 380.0635 c
400.6016 377.1553 403.2305 375.2354 406.1055 375.2354 c
406.6592 375.2354 407.2207 375.3066 407.7822 375.4561 c
411.25 376.3799 413.3145 379.9404 412.3906 383.4102 c
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
